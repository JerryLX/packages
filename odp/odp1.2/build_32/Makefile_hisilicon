TARGET = $(notdir $(CURDIR))

ROOT            = ../$(TARGET)/../..

CC                := $(GNU_PREFIX)gcc
LD                := $(GNU_PREFIX)ld
ECHO              := @echo


SRCS      := $(wildcard $(ROOT)/platform/linux-hisilicon/*.c)
SRCS      += $(wildcard $(ROOT)/platform/linux-hisilicon/accelerator/*.c)
SRCS      += $(wildcard $(ROOT)/platform/linux-hisilicon/common/*.c)
SRCS      += $(wildcard $(ROOT)/platform/linux-hisilicon/cpudrv/*.c)
SRCS      += $(wildcard $(ROOT)/platform/linux-hisilicon/ether/*.c)
SRCS      += $(wildcard $(ROOT)/platform/linux-hisilicon/mem/*.c)
SRCS      += $(wildcard $(ROOT)/platform/linux-hisilicon/pci/*.c)
SRCS      += $(wildcard $(ROOT)/platform/linux-hisilicon/ring/*.c)
SRCS      += $(wildcard $(ROOT)/platform/linux-hisilicon/timer/*.c)
SRCS      += $(wildcard $(ROOT)/platform/linux-hisilicon/uio/*.c)
#SRCS      += $(wildcard $(ROOT)/platform/linux-hisilicon/kni/*.c)

CLEAN_DIR := $(ROOT)/platform/linux-hisilicon
OBJS      := $(SRCS:.c=.o)  

OBJ_FILE   = $(OBJS)



                    
#定义当前模块的依赖文件
DEP_FILE        := $(OBJ_FILE:.o=.d)
I_OBJ_FILE      := $(OBJ_FILE:.o=.i)


#定义当前的依赖文件的搜索路径
vpath %.c $(SRCDIR)


#定义当前模块的编译选项和头文件搜索路径
INCLUDE_FILES     := -I$(ROOT)/platform/linux-hisilicon \
                     -I$(ROOT)/platform/linux-hisilicon/include \
                     -I$(ROOT)/platform/linux-hisilicon/include/odp \
                     -I$(ROOT)/platform/linux-generic/include \
                     -I$(ROOT)/platform/linux-generic/include/odp/plat \
                     -I$(BUILD_PATH) \
                     -I$(ROOT)/helper/include/odp/helper \
                     -I$(ROOT)/helper/include \
                     -I$(ROOT)/include


#当前模块的.i 的连接规则
#$(HISI_OBJ_FILENAME) : $(I_OBJ_FILE)
#	$(ECHO) "LD " $@;\
	$(LD) -fpic -shared -o  $@ $^

#当前模块的.o 的连接规则
$(HISI_OBJ_FILENAME) : $(OBJ_FILE) $(ROOT)/build_32/lib/odp_memory.o
	$(ECHO) "LD " $@;\
	$(LD)  -r -o $@ $^

#当前模块的.so 的连接规则
#$(HISI_OBJ_FILENAME) : $(OBJ_FILE)
#	$(ECHO) "LD " $@;\
	$(LD) -fpic -shared -o $@ $^

#当前模块的 应用程序 的连接规则
#$(HISI_OBJ_FILENAME) : $(OBJ_FILE)
#	$(ECHO) "LD " $@;\
#	$(CC) -o $@ -lc -ldl -T app.lds  $^

.PHONY: clean
clean:
	rm -f *.o *.i *.d *.so $(CLEAN_DIR)/accelerator/*.o $(CLEAN_DIR)/accelerator/*.d  $(CLEAN_DIR)/common/*.o $(CLEAN_DIR)/common/*.d \
	$(CLEAN_DIR)/cpudrv/*.o $(CLEAN_DIR)/cpudrv/*.d $(CLEAN_DIR)/ether/*.o $(CLEAN_DIR)/ether/*.d \
	$(CLEAN_DIR)/mem/*.o $(CLEAN_DIR)/mem/*.d $(CLEAN_DIR)/pci/*.o $(CLEAN_DIR)/pci/*.d \
	$(CLEAN_DIR)/ring/*.o $(CLEAN_DIR)/ring/*.d $(CLEAN_DIR)/timer/*.o $(CLEAN_DIR)/timer/*.d $(CLEAN_DIR)/uio/*.o $(CLEAN_DIR)/uio/*.d \
	$(CLEAN_DIR)/kni/*.o $(CLEAN_DIR)/kni/*.d

$(I_OBJ_FILE) :%.i :%.c
	$(ECHO) "CC " $@;
	$(CC) $(CFLAGS) $(INCLUDE_FILES) $< -E -C -P -o $@

#当前模块的.o 的编译规则
$(OBJ_FILE) : %.o : %.c
	$(ECHO) "CC " $(notdir $@);
	$(CC)  $(CFLAGS) $(INCLUDE_FILES) -c -o $@ $<


#当前模块的.d 文件的编译规则
$(DEP_FILE) : %.d : %.c
	$(ECHO) "CC -MM " $@;\
	set -e;rm -f $@;\
	$(CC) $(INCLUDE_FILES) -MM  $< > $@.$$$$;\
	sed 's,\($(*F)\).o \[ :]*,\1.o \ $@ : ,g' < $@.$$$$ > $@;\
	rm -f $@.$$$$


#如果需要增量编译的话，需要命令行输入INC_BUILD=1
ifeq ($(INC_BUILD),1)
-include $(PEM_DEP_FILE)
endif


